{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-cb2c56d29318085ce0346d51d49301a684aa29ff4f1f79b5b7ce9c0501044272d365472ea0c5212e0deb1c280f84cc5af904803a87601af28b4e73fe9adda9eb",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'first-angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterLink, RouterOutlet } from '@angular/router'\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    standalone: true,\r\n    imports: [CommonModule, RouterLink, RouterOutlet],\r\n    templateUrl: './app.component.html',\r\n    styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n    title = 'first-angular'\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"main\">\n  <router-outlet></router-outlet>\n</main>"
        },
        {
            "name": "ButtonComponentComponent",
            "id": "component-ButtonComponentComponent-a3ebdaa5a602b224e6aa02e7f57b6dbada65a6b8ee5fca9aadf0d2f7a73c8347350020ffdb7413ad2078bca1af8eb175ec75ce1799c01f617a2fc85e5bfe0368",
            "file": "src/app/button-component/button-component.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-component",
            "styleUrls": [
                "./button-component.component.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [
                "./button-component.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'black'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"blue\" | \"green\" | \"yellow\" | \"red\" | \"black\" | \"none\"",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 621,
                            "end": 634,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 622,
                                "end": 630,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "line": 30,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 36,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common'\nimport { Component, Input, Output, EventEmitter } from '@angular/core'\n\n@Component({\n    selector: 'app-button-component',\n    standalone: true,\n    imports: [CommonModule],\n    templateUrl: './button-component.component.html',\n    template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n  >\n    {{ label }}\n  </button>`,\n    styleUrls: ['./button-component.component.css'],\n})\nexport class ButtonComponentComponent {\n    \n  @Input()\n      color: 'blue' | 'green' | 'yellow' | 'red' | 'black' | 'none' = 'black'\n  \n  \n  \n  /**\n   * @required\n   */\n  @Input()\n      label = 'Button'\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n      onClick = new EventEmitter<Event>()\n\n  public get classes(): string[] {\n      return ['button', `button--${this.color}`]\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import url(\"https://fonts.googleapis.com/css2?family=VT323&display=swap\");\n\n.button {\n  display: inline-block;\n  cursor: pointer;\n  \n  font-weight: 700;\n  font-size: 20px;\n  font-family: \"VT323\", monospace;\n  line-height: 1;\n\n  padding: 6px 50px;\n  border-width: 5px;\n  border-style: solid;\n  \n  color: rgb(0, 0, 0);\n}\n\n.button--blue {\n  border-color: #697d8a27;\n  background-color: #ceebff;\n}\n.button--green {\n  border-color: #697d8a27;\n  background-color: #bcffb1;\n}\n\n.button--yellow {\n  border-color: #697d8a27;\n  background-color: #fff067;\n}\n\n.button--red {\n  border-color: #697d8a27;\n  background-color: #ff9999;\n}\n\n.button--black {\n  color: #b92713;\n  border-color: #141414;\n  background-color: #2b2b2b;\n}\n\n.button--none {\n  border-color: #141414;\n  background-color: #2b2b2b;\n}\n",
                    "styleUrl": "./button-component.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 38
                    }
                }
            },
            "templateData": "\n"
        },
        {
            "name": "GameComponent",
            "id": "component-GameComponent-5186ef3041aa0ce945abae11725073f287beda4e12ffc163ed46c48880a57075e4952ed65e730aa59c0fa70f1ef0fa8b36c426938d44476c8300f6adc70d6c46",
            "file": "src/app/game/game.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-game",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./game.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countries",
                    "defaultValue": "countries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "TileComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterLink, RouterOutlet } from '@angular/router'\r\nimport { } from '@storybook/angular'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport countries from '../../assets/countries.json'\r\n\r\nimport { TileComponent } from '../tile/tile.component'\r\n\r\n@Component({\r\n    selector: 'app-game',\r\n    standalone: true,\r\n    imports: [CommonModule, RouterLink, RouterOutlet, ReactiveFormsModule, TileComponent],\r\n    templateUrl: './game.component.html',\r\n    styleUrl: './game.component.css'\r\n})\r\n\r\nexport class GameComponent {\r\n    countries = countries\r\n\r\n}\r\n",
            "styleUrl": "./game.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main>\n    <h1>Draw {{ countries.Sweden.name }}</h1> <!-- Den här kod delen skriver ut namnet på landet som ska ritas ut. -->\n    <app-tile></app-tile>\n    <router-outlet></router-outlet>\n</main>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-c6d7a366f37e7e16d148a230282d50cc66a3eec330a39e155031ef2dc1db7149719e9f2e2fdf0c03170f1db715bcff7d2c713340fa90d324e197e54b159a1392",
            "file": "src/app/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { RouterLink, RouterOutlet } from '@angular/router'\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    standalone: true,\r\n    imports: [CommonModule, RouterLink, RouterOutlet],\r\n    templateUrl: './home.component.html',\r\n    styleUrl: './home.component.css'\r\n})\r\nexport class HomeComponent {\r\n\r\n}\r\n",
            "styleUrl": "./home.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"main\">\n    <h1>Land Puzzle</h1>\n    <a routerLink=\"/game\">Start</a>\n    <router-outlet></router-outlet>\n</main>"
        },
        {
            "name": "TileComponent",
            "id": "component-TileComponent-4c7383ad00052910782dbf06dfbb6eee096a9d79f0c50d0c0ebe529bb988232d777dfc000e76f7c426b91072ee4a29237e14737f9acdfba109bc69c6e528d1fa",
            "file": "src/app/tile/tile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tile",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "correctTestAnswerId",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "countries",
                    "defaultValue": "countries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'form'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "inputTileElements",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLInputElement[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "markedTiles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "tileElementId",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "tileElements",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Element[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "tiles",
                    "defaultValue": "new Array(9)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCheckConfirm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { ElementRef } from '@angular/core'\r\nimport countries from '../../assets/countries.json'\r\n\r\n@Component({\r\n    selector: 'app-tile',\r\n    standalone: true,\r\n    imports: [CommonModule],\r\n    templateUrl: './tile.component.html',\r\n    styleUrl: './tile.component.css'\r\n})\r\nexport class TileComponent {\r\n    tileElements: Element[] = []\r\n    tileElementId: number[] = []\r\n    tiles = new Array(9)\r\n    inputTileElements: HTMLInputElement[] = []\r\n    correctTestAnswerId: number[] = []\r\n    markedTiles: number[] = []\r\n\r\n    countries = countries\r\n\r\n    @ViewChild('form') form!: ElementRef\r\n\r\n    ngAfterViewInit(): void {\r\n        this.correctTestAnswerId = countries.Sweden.easy\r\n\r\n        this.tileElements = Array.from(this.form.nativeElement.children)\r\n        this.tileElements.forEach((tile, id) => {\r\n            tile.id = id.toString()\r\n            Array.from(tile.children).forEach((element: Element, index) => {\r\n                if (index === 0) {\r\n                    const inputElement = element as HTMLInputElement\r\n                    inputElement.id = 'tile' + id.toString()\r\n                    this.inputTileElements.push(inputElement)\r\n                    this.tileElementId.push(id)\r\n                }\r\n                else {\r\n                    const labelElement = element as HTMLLabelElement\r\n                    labelElement.htmlFor = 'tile' + id.toString()\r\n                }\r\n            })\r\n        })\r\n    }\r\n    onCheckConfirm() {\r\n        this.tileElementId.forEach((id) => {\r\n            if (this.inputTileElements[id].checked) {\r\n                this.markedTiles.push(id)\r\n            }\r\n        })\r\n        if (this.markedTiles.toString() === this.correctTestAnswerId.toString()) {\r\n            alert('Horay! :D')\r\n        }\r\n        this.markedTiles = []\r\n    }\r\n}\r\n",
            "styleUrl": "./tile.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<form #form id=\"form\" action=\"\" ng-controller=\"ExampleController\">\n    <section *ngFor=\"let tile of tiles\" class=\"tile-outer\">\n        <input type=\"checkbox\" id=\"Placeholder\" [ngClass]=\"['display-none', 'tile-checkbox']\">\n        <label for=\"Placeholder\" class=\"tile-inner\"></label>\n    </section>\n</form>\n<button type=\"button\" (click)=\"onCheckConfirm()\">Confirm</button>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n    providers: [provideRouter(routes)]\r\n}"
            },
            {
                "name": "Confirm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Confirm',\n    color: 'blue',\n  },\n}"
            },
            {
                "name": "Easy",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Easy',\n    color: 'green',\n    \n  },\n}"
            },
            {
                "name": "Exit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Exit',\n    \n  },\n}"
            },
            {
                "name": "Extreme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Extreme',\n    color: 'black',\n    \n  },\n}"
            },
            {
                "name": "Hard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Hard',\n    color: 'red',\n    \n  },\n}"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Medium',\n    color: 'yellow',\n    \n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Return",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Return',\n    color: 'none',\n    \n  },\n}"
            },
            {
                "name": "Start",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Start',\n    color: 'blue',\n  },\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Tips",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Tips',\n    color: 'yellow',\n    \n  },\n}"
            },
            {
                "name": "VeryEasy",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ButtonComponentStory",
                "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Very easy',\n    color: 'blue',\n    \n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ButtonComponentStory",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponentComponent>",
                "file": "src/app/button-component/button-component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n    providers: [provideRouter(routes)]\r\n}"
                }
            ],
            "src/app/button-component/button-component.stories.ts": [
                {
                    "name": "Confirm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Confirm',\n    color: 'blue',\n  },\n}"
                },
                {
                    "name": "Easy",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Easy',\n    color: 'green',\n    \n  },\n}"
                },
                {
                    "name": "Exit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Exit',\n    \n  },\n}"
                },
                {
                    "name": "Extreme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Extreme',\n    color: 'black',\n    \n  },\n}"
                },
                {
                    "name": "Hard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Hard',\n    color: 'red',\n    \n  },\n}"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Medium',\n    color: 'yellow',\n    \n  },\n}"
                },
                {
                    "name": "Return",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Return',\n    color: 'none',\n    \n  },\n}"
                },
                {
                    "name": "Start",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Start',\n    color: 'blue',\n  },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "Tips",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Tips',\n    color: 'yellow',\n    \n  },\n}"
                },
                {
                    "name": "VeryEasy",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonComponentStory",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    label: 'Very easy',\n    color: 'blue',\n    \n  },\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/button-component/button-component.stories.ts": [
                {
                    "name": "ButtonComponentStory",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponentComponent>",
                    "file": "src/app/button-component/button-component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponentComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Confirm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Easy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Exit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Extreme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Hard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Return",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Start",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tips",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/button-component/button-component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VeryEasy",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/game/game.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GameComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tile/tile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            }
        ]
    }
}